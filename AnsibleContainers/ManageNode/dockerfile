# Step 1: Start from an official lightweight base image
FROM ubuntu:20.04

# Step 2: Set environment variables
# This ensures non-interactive mode when installing packages (prevents prompts)
ENV DEBIAN_FRONTEND=noninteractive

# Step 3: Update package lists and install necessary dependencies
RUN apt-get update && \
    apt-get install -y \
    python3 \
    python3-pip \
    ssh-client \
    curl \
    sudo \
    git \
    lsb-release \
    ca-certificates \
    && apt-get clean

# Step 4: Install Ansible
RUN pip3 install ansible

# Step 5: Create a non-root user (this will be the user that Ansible runs as)
RUN useradd -m ansible_user && \
    echo "ansible_user:ansible_password" | chpasswd && \
    adduser ansible_user sudo

# Step 6: Set the working directory
WORKDIR /home/ansible_user

COPY authorized_keys /home/demouser/.ssh/authorized_keys


# Step 7: Install OpenSSH server (so the container can accept SSH connections)
RUN apt-get update && \
    apt-get install -y openssh-server && \
    mkdir /var/run/sshd

# Step 8: Expose the SSH port (for Ansible to SSH into the container)
EXPOSE 22

# Step 9: Configure SSH to allow password authentication
RUN echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config

# Step 10: Start the SSH service (and keep the container running)
CMD ["/usr/sbin/sshd", "-D"]

# # Start with an official Ubuntu base image
# FROM ubuntu:20.04

# # Set environment variables to avoid interactive prompts during apt installs
# ENV DEBIAN_FRONTEND=noninteractive

# # Install OpenSSH server, Python, and any other dependencies required by Ansible
# RUN apt-get update && \
#     apt-get install -y \
#     openssh-server \
#     python3 \
#     python3-pip \
#     sudo \
#     net-tools \
#     vim \
#     iputils-ping \
#     && apt-get clean

# # Set up SSH
# RUN mkdir /var/run/sshd

# # Create a user to be used by Ansible
# # RUN useradd -m demouser && echo "demouser:demouser" | chpasswd && adduser demouser sudo

# # Allow password authentication for SSH (use with caution in a production environment)
# RUN sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config

# # Add demouser to sudo group
# # RUN usermod -aG sudo demouser

# # Expose the SSH port
# EXPOSE 22

# COPY authorized_keys /home/demouser/.ssh/authorized_keys

# # Set the working directory and copy any necessary files
# WORKDIR /home/ansible

# # Start the SSH server
# CMD ["/usr/sbin/sshd", "-D"]